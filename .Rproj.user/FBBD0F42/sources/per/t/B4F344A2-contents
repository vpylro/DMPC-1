## How to install and use DMPC package

  To install DMPC Package first install the devtools package. Then run
install_github("vpylro/DMPC").
DMPC uses a Phyloseq object as input.

##This function will be used to predict the likelihood of KIDMED index diet categories to influence the saliva's microbiome.
The prediction is performed by randonForests on full dataset.
```{r}
library(DMPC)
data("restroom")
DMPC.OOB.error(restroom, "Environment")
```
If the OOB error rate is zero, the dataset present large differences, and DMPC might not be necessary.
If the OOB error rate is greater than zero, next functions will find the best prevalence cutoff for the dataset.
This function takes two parameters: The phyloseq object (restroom) and the predictor variable (Environment).

## Split the dataset by predictor variable
Two parameters are required to run this function: The phyloseq object (restroom) and the predictor variable (Environment).
```{r}
per_variable_obj= DMPC.split.by.variable(restroom, "Environment")
per_variable_obj
```

## Calculate the highest possible prevalence cutoffs
This function calculates prevalence for different cutoff values by increments of 5.
The input file is the output from the DMPC.split.by.variable (per_variable_obj)
```{r}
prevalences=DMPC.prevalence(per_variable_obj)
prevalences
```

## Calculates the best prevalence cutoff for the dataset
This function will return a table with PERMANOVA  and RandomForests results for each prevalence cutoff.
The best prevalence cutoff value provides the clearest separation of communities while still including a majority of the taxa in the analysis. If true differences are present.
It will be represented by the first cutoff in which the OOB error rate is zero.
The input file is the list of prevalences generated by the DMPC.prevalence (prevalences) and the predictor variable (Environment).
```{r}
DMPC.best.prevalence(prevalences, "Environment")
```
## Within this dataset the best prevalence cutoff was 60%
To obtain the phyloseq object at this cutoff use the following command.

```{r}
prevalence.60 = prevalences$`60`
prevalence.60
```
## FDR
If needed, its possible to run a False Discovery Rate.
Likelihood of introducing bias by calculations of different prevalence cutoffs.

```{r}
DMPC.FDR(restroom, "Environment", bootstrap = 100, method.dist = "bray")
```
